import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;

public class DatabaseConnection {

    private static final String URL = "jdbc:mysql://localhost:3306/kd_electronics";
    private static final String USER = "root";
    private static final String PASSWORD = "123456";  

    public static Connection getConnection() throws SQLException {
        return DriverManager.getConnection(URL, USER, PASSWORD);
    }
}
_________________________________________________________________________________________________
public class Producto {
    private String codigoProducto;
    private String nombre;
    private String descripcion;
    private double precioBase;
    private double precioVenta;
    private String categoria;
    private int cantidadDisponible;
    private boolean eliminado;

    public Producto(String codigoProducto, String nombre, String descripcion, double precioBase, double precioVenta, String categoria, int cantidadDisponible, boolean eliminado) {
        this.codigoProducto = codigoProducto;
        this.nombre = nombre;
        this.descripcion = descripcion;
        this.precioBase = precioBase;
        this.precioVenta = precioVenta;
        this.categoria = categoria;
        this.cantidadDisponible = cantidadDisponible;
        this.eliminado = eliminado;
    }

    public String getCodigoProducto() {
        return codigoProducto;
    }

    public void setCodigoProducto(String codigoProducto) {
        this.codigoProducto = codigoProducto;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public double getPrecioBase() {
        return precioBase;
    }

    public void setPrecioBase(double precioBase) {
        this.precioBase = precioBase;
    }

    public double getPrecioVenta() {
        return precioVenta;
    }

    public void setPrecioVenta(double precioVenta) {
        this.precioVenta = precioVenta;
    }

    public String getCategoria() {
        return categoria;
    }

    public void setCategoria(String categoria) {
        this.categoria = categoria;
    }

    public int getCantidadDisponible() {
        return cantidadDisponible;
    }

    public void setCantidadDisponible(int cantidadDisponible) {
        this.cantidadDisponible = cantidadDisponible;
    }

    public boolean isEliminado() {
        return eliminado;
    }

    public void setEliminado(boolean eliminado) {
        this.eliminado = eliminado;
    }
}
_______________________________________________________________________________________
import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class ProductoDAO {
    public void create(Producto producto) throws SQLException {
        String sql = "INSERT INTO productos (codigo_producto, nombre, descripcion, precio_base, precio_venta, categoria, cantidad_disponible, eliminado) VALUES (?, ?, ?, ?, ?, ?, ?, ?)";

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, producto.getCodigoProducto());
            stmt.setString(2, producto.getNombre());
            stmt.setString(3, producto.getDescripcion());
            stmt.setDouble(4, producto.getPrecioBase());
            stmt.setDouble(5, producto.getPrecioVenta());
            stmt.setString(6, producto.getCategoria());
            stmt.setInt(7, producto.getCantidadDisponible());
            stmt.setBoolean(8, producto.isEliminado());

            stmt.executeUpdate();
        }
    }

    public Producto read(String codigoProducto) throws SQLException {
        String sql = "SELECT * FROM productos WHERE codigo_producto = ? AND eliminado = FALSE";
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, codigoProducto);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return new Producto(
                        rs.getString("codigo_producto"),
                        rs.getString("nombre"),
                        rs.getString("descripcion"),
                        rs.getDouble("precio_base"),
                        rs.getDouble("precio_venta"),
                        rs.getString("categoria"),
                        rs.getInt("cantidad_disponible"),
                        rs.getBoolean("eliminado")
                );
            } else {
                return null;
            }
        }
    }

    public void update(Producto producto) throws SQLException {
        String sql = "UPDATE productos SET nombre = ?, descripcion = ?, precio_base = ?, precio_venta = ?, categoria = ?, cantidad_disponible = ? WHERE codigo_producto = ?";

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, producto.getNombre());
            stmt.setString(2, producto.getDescripcion());
            stmt.setDouble(3, producto.getPrecioBase());
            stmt.setDouble(4, producto.getPrecioVenta());
            stmt.setString(5, producto.getCategoria());
            stmt.setInt(6, producto.getCantidadDisponible());
            stmt.setString(7, producto.getCodigoProducto());

            stmt.executeUpdate();
        }
    }

    public void delete(String codigoProducto) throws SQLException {
        String sql = "UPDATE productos SET eliminado = TRUE WHERE codigo_producto = ?";

        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {
            stmt.setString(1, codigoProducto);
            stmt.executeUpdate();
        }
    }

    public List<Producto> listAll() throws SQLException {
        String sql = "SELECT * FROM productos WHERE eliminado = FALSE";
        List<Producto> productos = new ArrayList<>();
        try (Connection conn = DatabaseConnection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql);
             ResultSet rs = stmt.executeQuery()) {

            while (rs.next()) {
                productos.add(new Producto(
                        rs.getString("codigo_producto"),
                        rs.getString("nombre"),
                        rs.getString("descripcion"),
                        rs.getDouble("precio_base"),
                        rs.getDouble("precio_venta"),
                        rs.getString("categoria"),
                        rs.getInt("cantidad_disponible"),
                        rs.getBoolean("eliminado")
                ));
            }
        }
        return productos;
    }
}
_________________________________________________________________________________________________
import java.sql.SQLException;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        ProductoDAO productoDAO = new ProductoDAO();

        try {
            Producto producto = new Producto("P001", "Televisor", "Televisor 4K", 400.00, 500.00, "Electrónica", 10, false);
            productoDAO.create(producto);

            Producto productoLeido = productoDAO.read("P001");
            if (productoLeido != null) {
                System.out.println("Producto Leído: " + productoLeido.getNombre());

                productoLeido.setPrecioVenta(550.00);
                productoDAO.update(productoLeido);

                productoDAO.delete("P001");

                List<Producto> productos = productoDAO.listAll();
                for (Producto p : productos) {
                    System.out.println("Producto: " + p.getNombre());
                }
            } else {
                System.out.println("Producto no encontrado.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
